#Select only adults, and only if age is not missing
nhanes_adults <- NHANES[NHANES$Age>18 & !is.na(NHANES$Age),]
#View(nhanes)
head(nhanes_adults)
tail(nhanes_adults)
favstats(nhanes_adults$TotChol)
#help(NHANES)
#install.packages ("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(NHANES)
library(mosaic)
#Select only adults, and only if age is not missing
nhanes_adults <- NHANES[NHANES$Age>18 & !is.na(NHANES$Age),]
#View(nhanes)
head(nhanes_adults)
tail(nhanes_adults)
favstats(nhanes_adults$TotChol)
#help(NHANES)
kable(favstats(nhanes_adults$BMI), caption="Table 2: Summary statistics for BMI")
kable(favstats(nhanes_adults$Age), caption="Table 2: Summary statistics for Age")
kable(favstats(nhanes_adults$TotChol), caption="Table 1: Summary statistics for TotChol")
View(nhanes_adults)
help("NHANES")
#summary of TotChol and Age in adults
favstats(nhanes_adults$TotChol)
favstats(nhanes_adults$Age)
tally(nhanes_adults$Gender)
caption="Table 3: Total Observations of Gender"
tally(nhanes_adults$Education)
caption="Table 4: Total Observations of Education Level"
tally(nhanes_adults$Diabetes)
caption="Table 5: Total Observations of Diabetes"
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
3742/7372
3630/7372
2262+2098
7372-4360
4360/7372
743/7372
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults)
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults)
caption="Table 5: Total Observations of Diabetes"
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults)
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults)
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults)
caption="Table 5: Total Observations of Diabetes"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults)
caption="Table 7: HDL by Education"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults)
caption="Table 7: HDL by Education"
favstats(TotChol~Education,data=nhanes_adults)
caption="Table 7: HDL by Education"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
caption="Table 6: College Grad HDL Level by Gender"
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Education,data=nhanes_adults2)
#summary of TotChol and Age in adults
favstats(nhanes_adults$TotChol)
favstats(nhanes_adults$Age)
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults)
#install.packages("mosaic")
library(mosaic)
#Select adults whose general health is self reported as "Fair"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
#Total number of observations in each level for the following categorical variables
tally(nhanes_adults$Gender)
tally(nhanes_adults$Education)
tally(nhanes_adults$Diabetes)
#Total number of observations in each level for the following categorical variables
tally(nhanes_adults$Gender)
tally(nhanes_adults$Education)
tally(nhanes_adults$Diabetes)
#install.packages("mosaic")
library(mosaic)
#Select all adults by education level
favstats(TotChol~Education,data=nhanes_adults)
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults)
caption="Table 6: College Grad HDL Level by Gender"
nhanes_adults2 <- nhanes_adults[nhanes_adults$Education=="College Grad",]
favstats(TotChol~Gender,data=nhanes_adults2)
caption="Table 6: College Grad HDL Level by Gender"
kable(favstats(nhanes_adults$Age), caption="Table 2: Summary Statistics for Age")
kable(favstats(nhanes_adults$TotChol), caption="Table 1: Summary Statistics for TotChol")
kable(favstats(nhanes_adults$TotChol), caption="Table 1: Summary Statistics for TotChol")
kable(favstats(nhanes_adults$Age), caption="Table 2: Summary Statistics for Age")
kable(favstats(nhanes_adults$Age), caption="Table 2: Summary Statistics for Age")
tally(nhanes_adults$Gender)
caption="Table 3: Total Observations of Gender"
tally(nhanes_adults$Gender)
caption="Table 3: Total Observations of Gender"
snacks <- read_csv(snackportions.csv)
snacks <- read_csv(snackportions.csv)
snacks <- read_csv(snackportions.csv)
library(readr)
snackportions <- read_csv("Desktop/snackportions.csv")
View(snackportions)
snacks <- read_csv(snackportions.csv)
owners <- read.table("owner_lookup.txt", sep='\t', header = T)
OMD<- read.table("Owner_Month_Dept.txt", sep='\t', header = T)
owners_omd <- merge(owners,OMD, by = "MEMBER")
owners_omd <- owners_omd[sample(nrow(owners_omd)),]
owners_omd <- owners_omd[1:100000,]
View(owners_omd)
head(owners_omd)
pchisq(31.79, 9, lower.tail = F)
knitr::opts_chunk$set(echo = T,
eval = T,
message = F,
warning = F,
fig.align = "center",
fig.width = 8,
fig.height = 3)
options(show.signif.stars = FALSE)
library(readr)
library(knitr)
library(mosaic)
library(NHANES)
library(Sleuth3)
library(effects)
library(psych)
library(car)
nhanes <- data(NHANES)
#select only participants over 2 years of age as BMI and TVHrsDay were only recorded for 2+
nhanes_2 <- NHANES[NHANES$Age>=2 & !is.na(NHANES$Age),]
#subset columns to just BMI, Age, Gender, TVHrsDay
nhanes_2_sub <- select(nhanes_2,c(BMI, Age, Gender, TVHrsDay))
#omit NAs
nhanes_cleaned <- na.omit(nhanes_2_sub)
knitr::opts_chunk$set(echo = T,
eval = T,
message = F,
warning = F,
fig.align = "center",
fig.width = 8,
fig.height = 3)
options(show.signif.stars = FALSE)
library(readr)
library(knitr)
library(mosaic)
library(NHANES)
library(Sleuth3)
library(effects)
library(psych)
library(car)
nhanes <- data(NHANES)
#select only participants over 2 years of age as BMI and TVHrsDay were only recorded for 2+
nhanes_2 <- NHANES[NHANES$Age>=2 & !is.na(NHANES$Age),]
#subset columns to just BMI, Age, Gender, TVHrsDay
nhanes_2_sub <- select(nhanes_2,c(BMI, Age, Gender, TVHrsDay))
#omit NAs
nhanes_cleaned <- na.omit(nhanes_2_sub)
View(nhanes_2_sub)
View(nhanes_cleaned)
kable(favstats(nhanes_2_sub$BMI),
caption="Table 1:Summary Statistics for BMI")
kable(favstats(nhanes_cleaned$Age),
caption="Table 2:Summary Statistics for Age")
kable(tally(nhanes_cleaned$Gender),
caption="Table 3: Tally of Gender")
View(nhanes_cleaned)
kable(tally(nhanes_cleaned$TVHrsDay),
caption="Table 4: Tally of TV Hours per Day")
kable(tally(nhanes_cleaned$Gender),
caption="Table 3: Tally of Gender")
kable(tally(nhanes_cleaned$TVHrsDay),
caption="Table 4: Tally of TV Hours per Day")
kable(tally(nhanes_cleaned$Gender),
caption="Table 3: Tally of Gender")
kable(tally(nhanes_cleaned$TVHrsDay),
caption="Table 4: Tally of TV Hours per Day")
kable(tally(nhanes_cleaned$Gender),
caption="Table 3: Tally of Gender")
kable(tally(nhanes_cleaned$TVHrsDay),
caption="Table 4: Tally of TV Hours per Day")
## Subset panel
pairs.panels(nhanes_cleaned[,1:2], ellipses = F, scale=T, smooth=F, hist.col="#85D4E3")
knitr::opts_chunk$set(echo = T,
eval = T,
message = F,
warning = F,
fig.align = "center",
fig.width = 8,
fig.height = 3)
options(show.signif.stars = FALSE)
library(Sleuth3)
library(mosaic)
library(knitr)
library(effects)
library(psych)
library(yarrr)
lm.hand.full <- lm(speed~time + age + gender + dominant, data=hands)
lm.nhanes.full <- lm(BMI~Age + Gender + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.full)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
## Subset panel
pairs.panels(nhanes_cleaned[,1:2], ellipses = F, scale=T, smooth=F, hist.col="#85D4E3")
kable(tally(nhanes_cleaned$Gender),
caption="Table 3: Tally of Gender")
kable(tally(nhanes_cleaned$TVHrsDay),
caption="Table 4: Tally of TV Hours per Day")
lm.nhanes.full <- lm(BMI~Age + Gender + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.full)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
summary(lm.nhanes.full)
summary(lm.nhanes.full)
lm.nhanes.simple <- lm(BMI~Age + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.simple)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
View(nhanes_cleaned)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
lm.nhanes.full <- lm(BMI~Age + Gender + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.full)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
7. No influential points: The Residuals vs. Leverage plot does not show any lines with Cook's D greater than 1, this condition is met.
plot(lm.nhanes.full,pch=19)
hands <- read.csv("/Users/chrismcloy/Desktop/hands.csv")
lm.nhanes.simple <- lm(BMI~Age + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.simple)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
lm.nhanes.simple <- lm(BMI~Age + TVHrsDay, data=nhanes_cleaned)
summary(lm.nhanes.simple)
par(mfrow=c(2,2))
plot(lm.nhanes.full,pch=19)
knitr::opts_chunk$set(echo = T,
eval = T,
message = F,
warning = F,
fig.align = "center",
fig.width = 8,
fig.height = 3)
options(show.signif.stars = FALSE)
library(readr)
library(knitr)
library(mosaic)
library(NHANES)
library(Sleuth3)
library(effects)
library(psych)
library(car)
nhanes <- data(NHANES)
#select only participants over 2 years of age as BMI and TVHrsDay were only recorded for 2+
nhanes_2 <- NHANES[NHANES$Age>=2 & !is.na(NHANES$Age),]
#subset columns to just BMI, Age, Gender, TVHrsDay
nhanes_2_sub <- select(nhanes_2,c(BMI, Age, Gender, TVHrsDay))
#omit NAs
nhanes_cleaned <- na.omit(nhanes_2_sub)
kable(confint(lm.nhanes.simple), caption = "Table 3. Confidence intervals for BMI as explained by Age and TV Hours per Day.")
plot(allEffects(lm.nhanes.simple))
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(DBI)
library(scales)
library(bigrquery)
library(lubridate)
library(dbplyr)
library(lubridate)
library(RSQLite)
options(scipen = 20)
con <- dbConnect(
bigrquery::bigquery(),
project = "umt-msba",
dataset = "transactions"
)
# Create your data table `d` here.
sales.date.d <- con %>%
tbl("*") %>%
filter(is.na(trans_status) |
trans_status %in% c(" ","V","R"),
!(department %in% c(0,15)),
card_no != 3) %>%
select(description,datetime,total) %>%
mutate(year=year(datetime),
month=month(datetime),
hour=hour(datetime)) %>%
group_by(year,hour)%>%
summarize(sales=sum(total,na.rm=T)) %>%
ungroup() %>%
collect()
d %>%
mutate(year=year(date)) %>%
group_by(year,hour) %>%
summarize(sales = sum(sales)) %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
sales.date.d %>%
mutate(year=year(date)) %>%
group_by(year,hour) %>%
summarize(sales = sum(sales)) %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
sales.date.d
sales.date.d %>%
#mutate(year=year(date)) %>%
group_by(year,hour) %>%
summarize(sales = sum(sales)) %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
sales.date.d %>%
mutate(year=year(date)) %>%
group_by(year,hour) %>%
summarize(sales = sum(sales)) %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
sales.date.d %>%
mutate(year=year(date_chris)) %>%
group_by(year,hour) %>%
summarize(sales = sum(sales)) %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
sales.date.d %>%
filter(year != 2017) %>%
ggplot(aes(x=hour,y=sales)) +
geom_line() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Hour",y="Sales",
title="Sales by Hour of the Day across Years") +
scale_x_continuous(limits=c(8,20)) +
scale_y_continuous(label=dollar)
head(sales.date.d)
# Create your data table `d` here.
d <- con %>%
tbl("*") %>%
filter(is.na(trans_status) |
trans_status %in% c(" ","V","R"),
!(department %in% c(0,15)),
card_no != 3) %>%
mutate(year=year(datetime),
month=month(datetime),
) %>%
group_by(card_no,year,month)%>%
summarize(sales=sum(total,na.rm=T)) %>%
ungroup() %>%
collect()
d %>%
group_by(card_no,year) %>%
summarize(sales = sum(sales)) %>%
ungroup() %>%
slice_sample(prop=0.03) %>%  # Don't need all the data for density
ggplot(aes(x=sales)) +
geom_density() +
facet_wrap(~year) +
theme_minimal() +
labs(x="Sales (Log)",y="",
title="Distribution of Sales by Owner by Year") +
scale_x_log10(label=dollar)
# First, let's get the top 100 product descriptions.
top.prods <- con %>%
tbl("*") %>%
filter(is.na(trans_status) |
trans_status %in% c(" ","V","R"),
!(department %in% c(0,15)),
card_no != 3) %>%
group_by(description) %>%
summarize(sales = sum(total,na.rm=T)) %>%
ungroup %>%
arrange(desc(sales)) %>%
head(n=100) %>%
collect()
# Now let's pull sales by year and month for these products
d <- con %>%
tbl("*") %>%
filter(is.na(trans_status) |
trans_status %in% c(" ","V","R"),
!(department %in% c(0,15)),
card_no != 3) %>%
filter(description %in% !!top.prods$description) %>%
select(description,datetime,total) %>%
mutate(year=year(datetime),
month=month(datetime)) %>%
group_by(description,year,month) %>%
summarize(sales=sum(total,na.rm=T)) %>%
ungroup() %>%
collect()
top.ten <- head(top.prods$description,n=10)
d %>%
filter(description %in% top.ten) %>%
group_by(description, month) %>%
summarize(sales = sum(sales, na.rm=T)) %>%
ungroup() %>%
ggplot(aes(x=month,y=sales)) +
geom_line() +
facet_wrap(~description) +
theme_minimal() +
labs(x="Month",y="Sales",
title="Top 10 Products: Sales by Month") +
scale_x_continuous() +
scale_y_continuous(label=dollar)
setwd("/Volumes/EXTERNAL/MSBA/Business Intelligence")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(readr)
library(forcats)
library(broom)
library(dplyr)
library(tidyquant)
library(lubridate)
delta <- read_csv("delta_data.csv")
delta <- read_csv("delta_data.csv", header=FALSE)
delta <- read_csv("delta_data.csv",header=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(readr)
library(forcats)
library(broom)
library(dplyr)
library(tidyquant)
library(lubridate)
delta <- read_csv("delta_data.csv",header=FALSE)
delta <- read_csv("delta_data.csv")
delta <- read_csv("delta_data.csv", header = F, col_names = c("Day of Month", "Flight Number", "Tail Number", "Dest Airport", "Airborne Time", "Distance","City ID") )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(readr)
library(forcats)
library(broom)
library(dplyr)
library(tidyquant)
library(lubridate)
delta <- read_csv("delta_data.csv", header = F, col_names = c("Day of Month", "Flight Number", "Tail Number", "Dest Airport", "Airborne Time", "Distance","City ID") )
delta <- read_csv("delta_data.csv")
